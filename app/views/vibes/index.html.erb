<div class="vibe-stream">
  <% @vibes.each do |vibe| %>
    <div class="vibe-item">
      <video muted autoplay loop class="vibe-video">
        <source src="<%= url_for(vibe.video) %>" type="video/mp4">
        Tarayıcınız bu videoyu desteklemiyor.
      </video>
      <div class="vibe-caption">
        <p><strong><%= vibe.user.username %></strong>: <%= vibe.caption %></p>
      </div>
      <div class="like-container">
        <% if vibe.likes.exists?(user_id: current_user.id) %>
          <%= link_to "Beğeniyi Kaldır",
                      vibe_like_path(vibe, vibe.likes.find_by(user_id: current_user.id)),
                      method: :delete, remote: true, class: "btn btn-sm btn-danger",
                      id: tag.id("like-button-#{vibe.id}") %>
        <% else %>
          <%= link_to "Beğen",
                      vibe_likes_path(vibe),
                      method: :post, remote: true, class: "btn btn-sm btn-outline-primary",
                      id: tag.id("like-button-#{vibe.id}") %>
        <% end %>
        <span id="<%= tag.id("like-count-#{vibe.id}") %>" class="ms-2">
    <%= pluralize(vibe.likes.count, "beğeni") %>
  </span>
      </div>
    </div>
  <% end %>
</div>

<style>
    /* Vibe akış container'ı */
    .vibe-stream {
        display: flex;
        flex-direction: column;
        overflow-y: scroll;
        height: 100vh; /* Tam ekran yüksekliği */
        scroll-snap-type: y mandatory; /* Kaydırma türü */
    }

    /* Her vibe öğesi */
    .vibe-item {
        height: 100vh; /* Her öğe tam ekran yüksekliğinde olacak */
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        scroll-snap-align: start; /* Her öğe hizalanacak */
        position: relative;
    }

    /* Video ayarları */
    .vibe-video {
        height: 88vh; /* Yükseklik ekranın %90'ı */
        max-width: 100%; /* Genişlik, ekran genişliğini geçmeyecek */
        object-fit: cover; /* Video, alanı dolduracak şekilde ayarlanacak */
        border-radius: 10px; /* Yuvarlak köşeler (isteğe bağlı) */
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Hafif gölge (isteğe bağlı) */
    }

    /* Video açıklaması */
    .vibe-caption {
        position: absolute;
        bottom: 20px;
        left: 20px;
        color: white;
        text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.8);
        background-color: rgba(0, 0, 0, 0.5);
        padding: 10px 15px;
        border-radius: 8px;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const videos = document.querySelectorAll(".vibe-video");

        // Intersection Observer Ayarları
        const observerOptions = {
            root: null, // Tüm görünür pencere
            threshold: 0.75, // Video alanının %75'i görünürse tetiklenir
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                const video = entry.target;

                if (entry.isIntersecting) {
                    // Video görünür olduğunda oynat
                    video.play();
                } else {
                    // Video görünür değilse durdur
                    video.pause();
                }
            });
        }, observerOptions);

        // Tüm videoları gözlemle
        videos.forEach((video) => {
            observer.observe(video);

            // Tıklama ile oynatma/durdurma özelliği
            video.addEventListener("click", () => {
                if (video.paused) {
                    video.play();
                } else {
                    video.pause();
                }
            });
        });
    });
</script>
